name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_call:
    secrets:
      arm_client_id:
        required: true
      arm_client_secret:
        required: true
      arm_tenant_id:
        required: true
      arm_subscription_id:
        required: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      CONFIGURATION: Release
      DOTNET_VERSION: 8.0.x
      SITE_PROJECT_NAME: ProgrammerAl.Site
      SRC_DIRECTORY_PATH: ${{ github.workspace }}/src/
      BUILD_ARTIFACTS_PATH: ${{ github.workspace }}/build_artifacts
      DYNAMIC_CONTENT_UPDATER_PROJECT_PATH: ${{ github.workspace }}/src/ProgrammerAl.Site/DynamicContentUpdater/DynamicContentUpdater.csproj
      PULUMI_PROJECT_DIRECTORY: ${{ github.workspace }}/infra/pulumi-infra-deploy
      PULUMI_PROJECT_FILE_PATH: ${{ env.PULUMI_PROJECT_DIRECTORY }}/pulumi-infra-deploy.csproj
      ARM_CLIENT_ID: ${{ secrets.arm_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.arm_client_secret }}
      ARM_TENANT_ID: ${{ secrets.arm_tenant_id }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.arm_subscription_id }}
      DYNAMIC_CONTENT_UPDATER_OUTPUT_PATH: ${{ github.workspace }}/static_content_output
      STORAGE_URL: https://content.programmeral.com
      PULUMI_STACK_NAME: prod

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.3.0
      - name: Npm Install Wrangler
        run: npm install --location=global wrangler
      - name: Install Pulumi
        uses: pulumi/setup-pulumi@v2
      - name: Log in with Azure so the Pulumi run can get Key Vault Secrets
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS_GITHUB_ACTIONS_PROGRAMMERAL_SITE }}'
      - name: Dotnet Restore - Pulumi Project
        run: dotnet restore ${{ env.PULUMI_PROJECT_FILE_PATH }}


        # Run the dynamic content creator first because some stuff it outputs goes to the blazor site
      - name: Run Dynamic Content Creator
        run: dotnet run --project ${{ env.DYNAMIC_CONTENT_UPDATER_PROJECT_PATH }} --no-restore --verbosity normal -- --AppRootPath "${{ env.SRC_DIRECTORY_PATH}}" --OutputDirectory "${{ env.DYNAMIC_CONTENT_UPDATER_OUTPUT_PATH }}" --StorageUrl "${{ env.STORAGE_URL }}"

      - name: Cake Frosting Build
        run: dotnet run --project build/build/Build.csproj -- --configuration=${{ env.CONFIGURATION }} --srcDirectoryPath=${{ env.SRC_DIRECTORY_PATH }} --BuildArtifactsPath=${{ env.BUILD_ARTIFACTS_PATH }}

      - name: Cake Frosting - Deploy
        run: dotnet run --project ${{ github.workspace }}/deploy/deploy/Deploy.csproj -- --configuration=${{ env.CONFIGURATION }} --PulumiStackName=${{ env.PULUMI_STACK_NAME }} --ReleaseVersion=${{ inputs.release_tag_id }} --WorkspacePath=${{ github.workspace }}

      - name: Push Content to Storage Api
        run: dotnet run --project ${{ github.workspace }}/src/ProgrammerAl.Site/ContentUploader/ContentUploader.csproj -- --configuration=${{ env.CONFIGURATION }} --PulumiStackName=${{ env.PULUMI_STACK_NAME }} --PulumiStackPath=${{ env.PULUMI_PROJECT_DIRECTORY }} --ContentDirectory= "${{ env.SRC_DIRECTORY_PATH}}/ProgrammerAl.Site.Content"


