name: Build and Deploy

on:
  push:
    branches: [main]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      CONFIGURATION: Release
      DOTNET_VERSION: 8.0.x
      SITE_PROJECT_NAME: ProgrammerAl.Site
      SLN_PATH: ${{ github.workspace }}/src/ProgrammerAl.Site/ProgrammerAl.Site.sln
      DYNAMIC_CONTENT_UPDATER_PROJECT_PATH: ${{ github.workspace }}/src/ProgrammerAl.Site/DynamicContentUpdater/DynamicContentUpdater.csproj
      SITE_PROJECT_PATH: ${{ github.workspace }}/src/ProgrammerAl.Site/ProgrammerAl.Site/ProgrammerAl.Site.csproj
      SITE_PUBLISH_OUTPUT_PATH: ${{ github.workspace }}/outputs/ProgrammerAl.Site
      TAILWIND_MODULE_DIRECTORY: ${{ github.workspace }}/src/ProgrammerAl.Site/CustomNpmModules/tailwind

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.3.0
      - name: .NET Restore
        run: dotnet restore ${{ env.SLN_PATH }}
      - name: .NET Test
        run: dotnet test ${{ env.SLN_PATH }} --no-restore --verbosity normal
      - name: Run Dynamic Content Creator
        run: dotnet run --project ${{ env.DYNAMIC_CONTENT_UPDATER_PROJECT_PATH }} --no-restore --verbosity normal -- --AppRootPath "${{ github.workspace }}/src"
      - name: Npm Build Tailwind
        run: npm run publish
        working-directory: ${{ env.TAILWIND_MODULE_DIRECTORY }}
      - name: .NET Build Static Site with WASM Runtime
        run: dotnet build ${{ env.SITE_PROJECT_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore --self-contained --runtime blazor-wasm
      - name: .NET Publish
        run: dotnet publish ${{ env.SITE_PROJECT_PATH }} --configuration ${{ env.CONFIGURATION }} --output ${{ env.SITE_PUBLISH_OUTPUT_PATH }}
      - name: Deploy Static Site
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: 'upload'
          app_location: ${{ env.SITE_PUBLISH_OUTPUT_PATH }}/wwwroot
          output_location: ''          
          skip_app_build: true
          skip_api_build: true
      - name: Push Content Files
        uses: bacongobbler/azure-blob-storage-upload@main
        with:
          source_dir: '${{ github.workspace }}/src/ProgrammerAl.Site.Content'
          container_name: 'sitecontent'
          connection_string: ${{ secrets.PublicBlobStorageConnectionString }}
          sync: 'true'  


