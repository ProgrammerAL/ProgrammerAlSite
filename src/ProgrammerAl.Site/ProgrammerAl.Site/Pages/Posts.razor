@page "/posts"
@using ProgrammerAl.Site.Components
@using ProgrammerAl.Site.Utilities.Entities;

@if (TagLinks is object && TagLinks.Links?.Any() is true)
{
    @if (IsViewingTags)
    {
        <button @onclick="@ToggleIsViewingTags">
            <div class="flex gap-2 place-items-end">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"
                     class="h-6 w-6">
                    <!--! Font Awesome Pro 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                    <path d="M192 64C86 64 0 150 0 256S86 448 192 448H384c106 0 192-86 192-192s-86-192-192-192H192zm192 96a96 96 0 1 1 0 192 96 96 0 1 1 0-192z" />
                </svg>
                <p class="text-lg font-semibold">Filter posts by tags:</p>
            </div>
        </button>
        <div class="flex flex-col">
            <div class="flex flex-wrap gap-4">
                @foreach (var tagSelection in TypesTagSelections)
                {
                    <SelectionTextComponent Text="@tagSelection.Key" IsSelected="@tagSelection.Value" OnSelectionChanged="HandleTagSelectionChangedAsync" />
                }
            </div>

            <div class="flex flex-wrap gap-4 mt-4">
                @foreach (var tagSelection in TagSelections)
                {
                    <SelectionTextComponent Text="@tagSelection.Key" IsSelected="@tagSelection.Value" OnSelectionChanged="HandleTagSelectionChangedAsync" />
                }
            </div>
        </div>
    }
    else
    {
        <button @onclick="@ToggleIsViewingTags">
            <div class="flex gap-2 place-items-end">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"
                     class="h-6 w-6">
                    <!--! Font Awesome Pro 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                    <path d="M384 128c70.7 0 128 57.3 128 128s-57.3 128-128 128H192c-70.7 0-128-57.3-128-128s57.3-128 128-128H384zM576 256c0-106-86-192-192-192H192C86 64 0 150 0 256S86 448 192 448H384c106 0 192-86 192-192zM192 352a96 96 0 1 0 0-192 96 96 0 1 0 0 192z" />
                </svg>
                <p class="text-lg font-semibold">Filter posts by tags</p>
            </div>
        </button>
    }
}

@if (PostSummaries != null)
{
    IEnumerable<IGrouping<int, PostSummary>> postsByYear;
    var selections = TagSelections.Concat(TypesTagSelections).Where(x => x.Value).Select(x => x.Key).ToList();

    if (selections.Any() && TagLinks?.Links is object)
    {
        //If any tags are selected, only show posts with those tags
        var selectedLinks = TagLinks.Links.Where(x => selections.Contains(x.Key, StringComparer.OrdinalIgnoreCase)).SelectMany(x => x.Value).ToList();

        postsByYear = PostSummaries
                        .Where(x => selectedLinks.Any(y => string.Equals(x.TitleLink, y, StringComparison.OrdinalIgnoreCase)))
                        .OrderByDescending(x => x.PostNumber)
                        .GroupBy(x => x.PostedDate.Year);
    }
    else
    {
        postsByYear = PostSummaries.OrderByDescending(x => x.PostNumber).GroupBy(x => x.PostedDate.Year);
    }

    foreach (var postByYear in postsByYear)
    {
        <div>
            <h1 class="mt-4 font-semibold text-lg">@postByYear.Key</h1>
            <hr>
            @foreach (var post in postByYear)
            {
                <div class="mt-4">
                    <a href="/posts/@post.TitleLink">
                        <p class="text-lg">@post.TitleHumanReadable</p>
                    </a>
                    <p class="text-sm">Posted on @post.PostedDate.ToLongDateString()</p>
                    @if (post.Tags?.Any() is true)
                    {
                        <p class="text-sm">Tags: @(string.Join(", ", post.Tags))</p>
                    }
                    else
                    {
                        <p class="text-sm">Tags: None</p>
                    }
                </div>
            }
        </div>
    }
}
